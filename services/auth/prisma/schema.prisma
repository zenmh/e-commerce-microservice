generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum AccountStatus {
  PENDING
  ACTIVE
  INACTIVE
  SUSPENDED
}

model User {
  id String @id @default(cuid())

  name     String
  email    String        @unique
  password String
  role     Role          @default(USER)
  verified Boolean       @default(false)
  status   AccountStatus @default(PENDING)

  loginHistories    LoginHistory[]
  verificationCodes VerificationCode[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum LoginAttempt {
  SUCCESS
  FAILED
}

model LoginHistory {
  id String @id @default(cuid())

  ipAddress String?
  userAgent String?
  attempt   LoginAttempt @default(SUCCESS)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  loginAt DateTime @default(now()) // this table won't updated ever
}

enum VerificationStatus {
  PENDING
  USED
  EXPIRED
}

enum VerificationCodeType {
  ACCOUNT_ACTIVATION
  PASSWORD_RESET
  EMAIL_CHANGE
  PHONE_CHANGE
  TWO_FACTOR_AUTH
  TWO_FACTOR_DISABLE
}

model VerificationCode {
  id String @id @default(cuid())

  code   String
  type   VerificationCodeType @default(ACCOUNT_ACTIVATION)
  status VerificationStatus   @default(PENDING)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  issuedAt   DateTime  @default(now())
  expiredAt  DateTime
  verifiedAt DateTime?
}
